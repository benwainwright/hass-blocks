---
import type { ExcerptToken, ParsedTsdoc } from '@types';
import CodeExcerpt from '../excerpt/code-excerpt.astro';
import { TsDocSection } from '@components';

interface Param {
  name: string;
  excerptTokens: ExcerptToken[];
  tsDoc: ParsedTsdoc | undefined;
}

interface Props {
  params: Param[];
  returnValue: ExcerptToken[];
  signature: string;
  headingLevel: string;
}

const { params, returnValue, signature, headingLevel } = Astro.props;
const Heading = headingLevel;
---

<Heading>Signature</Heading>
<pre>
  <CodeExcerpt code={signature} />
</pre>
{
  params.length > 0 && (
    <>
      <Heading>Parameters</Heading>
      <table>
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          {params.map((param) => (
            <tr>
              <td>{param.name}</td>
              <td>
                <CodeExcerpt code={param.excerptTokens} />
              </td>
              <td>
                <TsDocSection
                  sections={param.tsDoc?.summary}
                  containingTags="Fragment"
                />
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </>
  )
}
<Heading>Return Value</Heading>
<CodeExcerpt code={returnValue} />
