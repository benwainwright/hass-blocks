---
import type { ApiItemKind } from '@microsoft/api-extractor-model';
import type { ParsedTsdoc } from '@types';
import { kebabize } from '@utils';
import { TsDocSection } from '../ts-doc-section';

interface Member {
  name: string;
  kind: ApiItemKind;
  tsDoc: ParsedTsdoc | undefined;
}

interface Props {
  packageName: string;
  kind: ApiItemKind;
  members: Member[];
}

const { kind, members, packageName } = Astro.props;
const filteredMembers = members.filter((member) => member.kind === kind);
---

<style>
  table {
    width: 100%;
    table-layout: fixed;
  }

  table td:first-child,
  th:first-child {
    width: 35%;
    overflow: hidden;
  }
</style>

{
  filteredMembers.length > 0 && (
    <>
      <h3>{kind}</h3>
      <table class="striped">
        <thead>
          <tr>
            <th>Name</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          {filteredMembers.map((member) => (
            <tr>
              <td>
                <a
                  href={`/api-docs/package/${kebabize(packageName)}/${kebabize(member.name)}`}
                >
                  {member.name}
                </a>
              </td>
              <td>
                <TsDocSection
                  sections={member.tsDoc?.summary}
                  containingTags="Fragment"
                />
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </>
  )
}
